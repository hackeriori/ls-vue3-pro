function l(u,t,i){return u.slice(0,t)+i+u.slice(t)}function E(u,t,i=!1,B){let F=null,c=!1;const s=function(...a){F&&clearTimeout(F),i&&!c&&(u.apply(this,a),c=!0),F=setTimeout(()=>{u.apply(this,a),F=null},t)};return s.cancel=function(){F&&clearTimeout(F),F=null},s}function C(u,t){return`${typeof u=="object"?u.constructor.name:u.name}类中的${t.toString()}方法中，`}function e(u,t="校验失败！",i=!1){return function(B,F,c,s){let a=!0,f=[];for(let r=0;r<B.length;r++){const o=B[r];(o.index<s.length||i)&&(u(o.index<s.length?s[o.index]:void 0,o)||(a=!1,f.push(`第${o.index+1}个参数${o.name}，${typeof t=="string"?t:t(o)}`)))}if(!a)throw`参数校验失败：${C(F,c)}${f.join("；")}！`}}const n=new Map;n.set("required",e(u=>u!==void 0,"是必须的",!0)),n.set("number",e(u=>Number.isFinite(u),"必须是数字")),n.set("string",e(u=>typeof u=="string","必须是字符串")),n.set("boolean",e(u=>u===!0||u===!1,"必须是布尔值")),n.set("function",e(u=>typeof u=="function","必须是函数")),n.set("array",e(u=>Array.isArray(u),"必须是数组")),n.set("date",e(u=>u instanceof Date&&!isNaN(u.valueOf()),"必须是日期")),n.set("dom",e(u=>u instanceof HTMLElement,"必须是HTMLElement")),n.set("map",e(u=>u instanceof Map,"必须是Map类型")),n.set("regExp",e(u=>u instanceof RegExp,"必须是正则表达式")),n.set("symbol",e(u=>typeof u=="symbol","必须是Symbol")),n.set("asyncFunction",e(u=>typeof u=="function"&&u.constructor.name==="AsyncFunction","必须是异步函数")),n.set("instanceof",e((u,t)=>u instanceof t.instance,u=>`必须是 ${u.instance.name} 的实例类型`)),n.set("custom",e((u,t)=>t.custom(u),u=>u.customText||"自定义校验失败")),n.set("?number",e(u=>u===void 0||Number.isFinite(u),"必须是数字或者不传")),n.set("?string",e(u=>u===void 0||typeof u=="string","必须是字符串或者不传")),n.set("?boolean",e(u=>u===void 0||u===!0||u===!1,"必须是布尔值或者不传")),n.set("?function",e(u=>u===void 0||typeof u=="function","必须是函数或者不传")),n.set("?array",e(u=>u===void 0||Array.isArray(u),"必须是数组或者不传")),n.set("?date",e(u=>u===void 0||u instanceof Date&&!isNaN(u.valueOf()),"必须是日期或者不传")),n.set("?dom",e(u=>u===void 0||u instanceof HTMLElement,"必须是HTMLElement或者不传")),n.set("?map",e(u=>u===void 0||u instanceof Map,"必须是Map类型或者不传")),n.set("?regExp",e(u=>u===void 0||u instanceof RegExp,"必须是正则表达式或者不传")),n.set("?symbol",e(u=>u===void 0||typeof u=="symbol","必须是Symbol或者不传")),n.set("?asyncFunction",e(u=>u===void 0||typeof u=="function"&&u.constructor.name==="AsyncFunction","必须是异步函数或者不传")),n.set("?instanceof",e((u,t)=>u===void 0||u instanceof t.instance,u=>`必须是 ${u.instance.name} 的实例类型或者不传`)),n.set("?custom",e((u,t)=>u===void 0||t.custom(u),u=>u.customText||"自定义校验失败或者不传"));export{l as A,E as F};
